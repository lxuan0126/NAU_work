{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-container\"\n};\nconst _hoisted_2 = {\n  class: \"bio-box\"\n};\nconst _hoisted_3 = {\n  class: \"action-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, \"Welcome, \" + _toDisplayString($data.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"个人信息\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.bio = $event),\n    class: \"bio-edit\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.bio]]), _createCommentVNode(\" 可编辑的个人信息框 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.saveChanges && $options.saveChanges(...args)),\n    class: \"save-btn\"\n  }, \"保存修改\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.deleteAccount && $options.deleteAccount(...args)),\n    class: \"delete-btn\"\n  }, \"注销账户\")])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","username","_hoisted_2","_cache","$event","bio","_createCommentVNode","_hoisted_3","onClick","args","$options","saveChanges","deleteAccount"],"sources":["/home/xuan/selfwork/frontend/src/views/Data_fuc.vue"],"sourcesContent":["/* eslint-disable */\n<template>\n  <div class=\"user-container\">\n    <h1>Welcome, {{ username }}</h1>\n    <div class=\"bio-box\">\n      <h2>个人信息</h2>\n      <textarea v-model=\"bio\" class=\"bio-edit\"></textarea> <!-- 可编辑的个人信息框 -->\n      <div class=\"action-buttons\">\n        <button @click=\"saveChanges\" class=\"save-btn\">保存修改</button>\n        <button @click=\"deleteAccount\" class=\"delete-btn\">注销账户</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // 引入 Axios\nexport default {\n  data() {\n    return {\n      bio: this.$route.query.bio, // 让 bio 成为可编辑的状态\n      username: this.$route.query.username\n    };\n  },\n  methods: {\n    // 保存修改信息\n    async saveChanges() {\n      try {\n        // 发送 PUT 请求到后端保存修改信息\n        const response = await axios.put('http://localhost:5000/api/users/update', {\n          username: this.username,\n          bio: this.bio\n        });\n        console.log('修改后的个人信息已保存:', response.data);\n        alert('个人信息已保存！');\n      } catch (error) {\n        console.error('保存信息时发生错误:', error);\n        alert(`${error}`);\n      }\n    },\n    // 注销并删除账户\n    async deleteAccount() {\n      try {\n        if (confirm('确定要注销账户吗？此操作不可撤销')) {\n          // 发送 DELETE 请求到后端删除用户\n          const response = await axios.delete(`http://localhost:5000/api/users/delete/${this.username}`);\n          console.log('用户账户已删除:', response.data);\n          alert('您的账户已被删除');\n          // 重定向到登录页面或其他页面\n          this.$router.push('/login');\n        }\n      } catch (error) {\n        console.error('注销账户时发生错误:', error);\n        alert('删除账户失败，请稍后再试。');\n      }\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n/* 容器样式 */\n.user-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n  text-align: center; /* 保持欢迎标题居中 */\n}\n\n/* 标题样式 */\nh1 {\n  color: #333;\n  font-size: 2.5rem;\n  margin-bottom: 20px;\n}\n\n/* 个人信息框样式 */\n.bio-box {\n  background-color: #f5f5f5; /* 背景颜色 */\n  border: 1px solid #ccc; /* 边框 */\n  border-radius: 10px; /* 圆角 */\n  padding: 20px; /* 内边距 */\n  margin-top: 20px; /* 外边距 */\n  text-align: left; /* 个人信息内容顶格 */\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* 阴影效果 */\n  line-height: 1.6; /* 行高，增加可读性 */\n}\n\n/* 个人信息标题样式 */\n.bio-box h2 {\n  color: #333;\n  font-size: 1.5rem;\n  margin: 0px;\n  margin-bottom: 10px;\n}\n\n/* 可编辑的个人信息框 */\n.bio-edit {\n  width: 100%;\n  height: 100px;\n  padding: 10px;\n  font-size: 1.2rem;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  margin-bottom: 20px;\n}\n\n/* 操作按钮的样式 */\n.action-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n.save-btn,\n.delete-btn {\n  padding: 10px 20px;\n  font-size: 1.1rem;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.save-btn {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n}\n\n.save-btn:hover {\n  background-color: #45a049;\n}\n\n.delete-btn {\n  background-color: #f44336;\n  color: white;\n  border: none;\n}\n\n.delete-btn:hover {\n  background-color: #e53935;\n}\n</style>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAS;;EAGbA,KAAK,EAAC;AAAgB;;uBAL/BC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,CAAgC,YAA5B,WAAS,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,QAAQ,kBACxBH,mBAAA,CAOM,OAPNI,UAOM,G,0BANJJ,mBAAA,CAAa,YAAT,MAAI,sB,gBACRA,mBAAA,CAAoD;IAN1D,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMyBJ,KAAA,CAAAK,GAAG,GAAAD,MAAA;IAAET,KAAK,EAAC;iDAAXK,KAAA,CAAAK,GAAG,E,GAA+BC,mBAAA,eAAkB,EACvER,mBAAA,CAGM,OAHNS,UAGM,GAFJT,mBAAA,CAA2D;IAAlDU,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEd,KAAK,EAAC;KAAW,MAAI,GAClDG,mBAAA,CAA+D;IAAtDU,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAE,aAAA,IAAAF,QAAA,CAAAE,aAAA,IAAAH,IAAA,CAAa;IAAEd,KAAK,EAAC;KAAa,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}