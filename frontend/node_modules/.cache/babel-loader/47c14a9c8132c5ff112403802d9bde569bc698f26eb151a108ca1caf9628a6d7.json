{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"data-container\"\n};\nconst _hoisted_2 = {\n  class: \"data-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, \"Welcome, \" + _toDisplayString($options.username), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($options.bio), 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Your Info:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_2, [_createCommentVNode(\" 用 v-for 循环渲染展示数据 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(item.name) + \" - \" + _toDisplayString(item.description), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$options","username","bio","_hoisted_2","_createCommentVNode","_Fragment","_renderList","$data","data","item","index","key","name","description"],"sources":["/home/xuan/selfwork/frontend/src/views/Data_fuc.vue"],"sourcesContent":["/* eslint-disable */\n<template>\n  <div class=\"data-container\">\n    <h1>Welcome, {{ username }}</h1>\n    <p>{{ bio }}</p>\n    <h2>Your Info:</h2>\n    <ul class=\"data-list\">\n      <!-- 用 v-for 循环渲染展示数据 -->\n      <li v-for=\"(item, index) in data\" :key=\"index\">\n        {{ item.name }} - {{ item.description }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      data: [\n        // 示例数据，这里可以用实际的数据代替\n        { name: 'Project 1', description: 'Description of project 1' },\n        { name: 'Project 2', description: 'Description of project 2' },\n        { name: 'Project 3', description: 'Description of project 3' }\n      ]\n    };\n  },\n  computed: {\n    // 从路由 query 中获取用户名和个人简介\n    username() {\n      return this.$route.query.username || 'Anonymous';\n    },\n    bio() {\n      return this.$route.query.bio || 'No bio available';\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 容器样式 */\n.data-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n}\n\n/* 标题样式 */\nh1 {\n  color: #333;\n  font-size: 2rem;\n  margin-bottom: 10px;\n}\n\np {\n  color: #666;\n  font-size: 1.2rem;\n  margin-bottom: 20px;\n}\n\n/* 数据列表样式 */\n.data-list {\n  list-style: none;\n  padding: 0;\n}\n\n.data-list li {\n  background-color: #f9f9f9;\n  margin-bottom: 10px;\n  padding: 15px;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.3s ease;\n}\n\n.data-list li:hover {\n  background-color: #e9e9e9;\n}\n</style>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAgB;;EAIrBA,KAAK,EAAC;AAAW;;uBAJvBC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,CAAgC,YAA5B,WAAS,GAAAC,gBAAA,CAAGC,QAAA,CAAAC,QAAQ,kBACxBH,mBAAA,CAAgB,WAAAC,gBAAA,CAAVC,QAAA,CAAAE,GAAG,kB,0BACTJ,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAKK,MALLK,UAKK,GAJHC,mBAAA,sBAAyB,G,kBACzBR,mBAAA,CAEKS,SAAA,QAVXC,WAAA,CAQkCC,KAAA,CAAAC,IAAI,EARtC,CAQkBC,IAAI,EAAEC,KAAK;yBAAvBd,mBAAA,CAEK;MAF8Be,GAAG,EAAED;IAAK,GAAAX,gBAAA,CACxCU,IAAI,CAACG,IAAI,IAAG,KAAG,GAAAb,gBAAA,CAAGU,IAAI,CAACI,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}