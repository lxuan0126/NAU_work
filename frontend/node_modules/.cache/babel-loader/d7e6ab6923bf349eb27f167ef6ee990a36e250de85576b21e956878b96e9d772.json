{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async loginUser() {\n      try {\n        // 使用 Axios 发送 POST 请求到后端进行用户验证\n        const response = await axios.post('http://localhost:5000/api/users/login', {\n          username: this.username,\n          password: this.password\n        });\n        if (response.status === 200) {\n          console.log('登录成功:', response.data.user); // 打印返回的用户信息\n          this.$router.push({\n            path: '/data',\n            query: {\n              username: response.data.user.username,\n              bio: response.data.user.bio\n            }\n          });\n        } else {\n          // 如果不是成功状态，显示错误信息\n          alert(`登录失败: ${response.data.message}`);\n        }\n      } catch (error) {\n        if (error.response) {\n          // 处理后端返回的错误响应，比如 404 或 400 错误\n          console.error('登录请求失败:', error.response.data);\n          alert(`登录失败: ${error.response.data.error || '未知错误'}`);\n        } else {\n          // 处理网络错误或请求未发送成功的情况\n          console.error('登录请求失败:', error);\n          alert('登录失败，请稍后再试');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","methods","loginUser","response","post","status","console","log","user","$router","push","path","query","bio","alert","message","error"],"sources":["/home/xuan/selfwork/frontend/src/views/Login_fuc.vue"],"sourcesContent":["/* eslint-disable */\n<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <h1>登录</h1>\n      <form @submit.prevent=\"loginUser\" class=\"login-form\">\n        <input\n          type=\"text\" \n          v-model=\"username\" \n          placeholder=\"UserName\"\n          class=\"input-field\"\n          required\n        />\n        <input\n          type=\"password\"\n          v-model=\"password\"\n          placeholder=\"PassWord\"\n          class=\"input-field\"\n          required\n        />\n        <button type=\"submit\" class=\"login-btn\">登录</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async loginUser() {\n      try {\n        // 使用 Axios 发送 POST 请求到后端进行用户验证\n        const response = await axios.post('http://localhost:5000/api/users/login', {\n          username: this.username,\n          password: this.password\n        });\n        if (response.status === 200) {\n          console.log('登录成功:', response.data.user); // 打印返回的用户信息\n          this.$router.push({ path: '/data', query: { username: response.data.user.username, bio: response.data.user.bio } });\n        } else {\n          // 如果不是成功状态，显示错误信息\n          alert(`登录失败: ${response.data.message}`);\n        }\n      } catch (error) {\n        if (error.response) {\n          // 处理后端返回的错误响应，比如 404 或 400 错误\n          console.error('登录请求失败:', error.response.data);\n          alert(`登录失败: ${error.response.data.error || '未知错误'}`);\n        } else {\n          // 处理网络错误或请求未发送成功的情况\n          console.error('登录请求失败:', error);\n          alert('登录失败，请稍后再试');}\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 登录页面的容器居中显示 */\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 50vh; /* 占满整个视口的高度 */\n  background-color: #f5f5f5;\n  font-family: 'Arial', sans-serif;\n}\n\n/* 登录框样式 */\n.login-box {\n  background-color: #fff;\n  padding: 40px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  width: 100%;\n  max-width: 400px;\n}\n\n/* 标题样式 */\nh1 {\n  font-size: 2rem;\n  color: #333;\n  margin-bottom: 20px;\n}\n\n/* 输入框样式 */\n.input-field {\n  width: 100%;\n  padding: 15px;\n  margin: 10px 0;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  font-size: 1rem;\n}\n\n/* 输入框获取焦点时的样式 */\n.input-field:focus {\n  border-color: #4CAF50;\n  outline: none;\n}\n\n/* 登录按钮样式 */\n.login-btn {\n  width: 100%;\n  padding: 15px;\n  background-color: #4CAF50;\n  color: white;\n  font-size: 1rem;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n/* 按钮悬停样式 */\n.login-btn:hover {\n  background-color: #45a049;\n}\n\n/* 调整页面在小屏设备上的显示效果 */\n@media (max-width: 500px) {\n  .login-box {\n    padding: 20px;\n  }\n\n  .input-field {\n    padding: 12px;\n  }\n\n  .login-btn {\n    padding: 12px;\n  }\n}\n</style>\n"],"mappings":";AA2BA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,IAAI,CAAC,uCAAuC,EAAE;UACzEL,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,IAAIG,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3BC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEJ,QAAQ,CAACL,IAAI,CAACU,IAAI,CAAC,EAAE;UAC1C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE,OAAO;YAAEC,KAAK,EAAE;cAAEb,QAAQ,EAAEI,QAAQ,CAACL,IAAI,CAACU,IAAI,CAACT,QAAQ;cAAEc,GAAG,EAAEV,QAAQ,CAACL,IAAI,CAACU,IAAI,CAACK;YAAI;UAAE,CAAC,CAAC;QACrH,OAAO;UACL;UACAC,KAAK,CAAC,SAASX,QAAQ,CAACL,IAAI,CAACiB,OAAO,EAAE,CAAC;QACzC;MACF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACb,QAAQ,EAAE;UAClB;UACAG,OAAO,CAACU,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACb,QAAQ,CAACL,IAAI,CAAC;UAC7CgB,KAAK,CAAC,SAASE,KAAK,CAACb,QAAQ,CAACL,IAAI,CAACkB,KAAI,IAAK,MAAM,EAAE,CAAC;QACvD,OAAO;UACL;UACAV,OAAO,CAACU,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;UAC/BF,KAAK,CAAC,YAAY,CAAC;QAAC;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}