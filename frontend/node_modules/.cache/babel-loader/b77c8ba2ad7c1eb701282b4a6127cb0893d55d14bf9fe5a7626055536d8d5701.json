{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  class: \"register-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", {\n    class: \"title\"\n  }, \"注册\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.registerUser && $options.registerUser(...args), [\"prevent\"])),\n    class: \"register-form\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    placeholder: \"Username\",\n    class: \"input-field\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    placeholder: \"Email\",\n    class: \"input-field\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    placeholder: \"Password\",\n    class: \"input-field\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _cache[4] || (_cache[4] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"register-btn\"\n  }, \"Register\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","registerUser","type","$event","$data","username","placeholder","required","email","password"],"sources":["/home/xuan/selfwork/frontend/src/views/Register_fuc.vue"],"sourcesContent":["/* eslint-disable */\n<template>\n  <div class=\"register-container\">\n    <div class=\"register-box\">\n      <h1 class=\"title\">注册</h1>\n      <form @submit.prevent=\"registerUser\" class=\"register-form\">\n        <input\n          type=\"text\"\n          v-model=\"username\"\n          placeholder=\"Username\"\n          class=\"input-field\"\n          required\n        />\n        <input\n          type=\"email\"\n          v-model=\"email\"\n          placeholder=\"Email\"\n          class=\"input-field\"\n          required\n        />\n        <input\n          type=\"password\"\n          v-model=\"password\"\n          placeholder=\"Password\"\n          class=\"input-field\"\n          required\n        />\n        <button type=\"submit\" class=\"register-btn\">Register</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n    };\n  },\n  methods: {\n    registerUser() {\n      // Perform registration operation (will connect with backend later)\n      console.log('User registered with', this.username, this.email, this.password);\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 页面容器样式 */\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f5f5;\n  font-family: 'Arial', sans-serif;\n}\n\n/* 注册框样式 */\n.register-box {\n  background-color: #ffffff;\n  padding: 40px;\n  border-radius: 10px;\n  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n}\n\n/* 标题样式 */\n.title {\n  font-size: 2rem;\n  color: #333;\n  margin-bottom: 30px;\n}\n\n/* 输入框样式 */\n.input-field {\n  width: 100%;\n  padding: 15px;\n  margin: 10px 0;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  font-size: 1rem;\n}\n\n/* 输入框聚焦时的样式 */\n.input-field:focus {\n  border-color: #4CAF50;\n  outline: none;\n  box-shadow: 0px 0px 5px rgba(76, 175, 80, 0.5);\n}\n\n/* 注册按钮样式 */\n.register-btn {\n  width: 100%;\n  padding: 15px;\n  background-color: #4CAF50;\n  color: white;\n  font-size: 1rem;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin-top: 20px;\n}\n\n/* 按钮悬停效果 */\n.register-btn:hover {\n  background-color: #45a049;\n}\n\n/* 调整页面在移动设备上的显示效果 */\n@media (max-width: 500px) {\n  .register-box {\n    padding: 20px;\n  }\n\n  .input-field {\n    padding: 12px;\n  }\n\n  .register-btn {\n    padding: 12px;\n  }\n}\n</style>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC;AAAc;;uBAD3BC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,mBAAA,CA0BM,OA1BNC,UA0BM,G,0BAzBJD,mBAAA,CAAyB;IAArBH,KAAK,EAAC;EAAO,GAAC,IAAE,sBACpBG,mBAAA,CAuBO;IAvBAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALnBC,cAAA,KAAAC,IAAA,KAK6BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAER,KAAK,EAAC;sBACzCG,mBAAA,CAME;IALAQ,IAAI,EAAC,MAAM;IAPrB,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAQmBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBG,WAAW,EAAC,UAAU;IACtBf,KAAK,EAAC,aAAa;IACnBgB,QAAQ,EAAR;iDAHSH,KAAA,CAAAC,QAAQ,E,mBAKnBX,mBAAA,CAME;IALAQ,IAAI,EAAC,OAAO;IAdtB,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAemBC,KAAA,CAAAI,KAAK,GAAAL,MAAA;IACdG,WAAW,EAAC,OAAO;IACnBf,KAAK,EAAC,aAAa;IACnBgB,QAAQ,EAAR;iDAHSH,KAAA,CAAAI,KAAK,E,mBAKhBd,mBAAA,CAME;IALAQ,IAAI,EAAC,UAAU;IArBzB,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAsBmBC,KAAA,CAAAK,QAAQ,GAAAN,MAAA;IACjBG,WAAW,EAAC,UAAU;IACtBf,KAAK,EAAC,aAAa;IACnBgB,QAAQ,EAAR;iDAHSH,KAAA,CAAAK,QAAQ,E,6BAKnBf,mBAAA,CAA4D;IAApDQ,IAAI,EAAC,QAAQ;IAACX,KAAK,EAAC;KAAe,UAAQ,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}