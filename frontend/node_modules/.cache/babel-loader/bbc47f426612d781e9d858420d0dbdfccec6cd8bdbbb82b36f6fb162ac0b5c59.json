{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-container\"\n};\nconst _hoisted_2 = {\n  class: \"info-container\"\n};\nconst _hoisted_3 = {\n  class: \"user-info-box\"\n};\nconst _hoisted_4 = {\n  class: \"action-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, \"Welcome, \" + _toDisplayString($data.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"用户名\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    type: \"text\",\n    id: \"username\",\n    placeholder: \"请输入用户名\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"密码\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"text\",\n    id: \"password\",\n    placeholder: \"请输入密码\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"bio\"\n  }, \"个人简介\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.bio = $event),\n    type: \"text\",\n    id: \"bio\",\n    placeholder: \"请输入个人简介\",\n    class: \"input-field2\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.bio]])])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.saveChanges && $options.saveChanges(...args)),\n    class: \"save-btn\"\n  }, \"保存修改\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.deleteAccount && $options.deleteAccount(...args)),\n    class: \"delete-btn\"\n  }, \"注销账户\")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","username","_hoisted_2","_hoisted_3","for","_cache","$event","type","id","placeholder","password","bio","_hoisted_4","onClick","args","$options","saveChanges","deleteAccount"],"sources":["/home/xuan/selfwork/frontend/src/views/Data_fuc.vue"],"sourcesContent":["/* eslint-disable */\n<template>\n  <div class=\"user-container\">\n    <h1>Welcome, {{ username }}</h1>\n\n    <div class=\"info-container\">\n      <div class=\"user-info-box\">\n        <label for=\"username\">用户名</label>\n        <input\n          v-model=\"username\"\n          type=\"text\"\n          id=\"username\"\n          placeholder=\"请输入用户名\"\n          class=\"input-field\"\n        />\n        <label for=\"password\">密码</label>\n        <input\n          v-model=\"password\"\n          type=\"text\"\n          id=\"password\"\n          placeholder=\"请输入密码\"\n          class=\"input-field\"\n        />\n        <label for=\"bio\">个人简介</label>\n        <input\n          v-model=\"bio\"\n          type=\"text\"\n          id=\"bio\"\n          placeholder=\"请输入个人简介\"\n          class=\"input-field2\"\n        />\n      </div>\n    </div>\n\n    <div class=\"action-buttons\">\n      <button @click=\"saveChanges\" class=\"save-btn\">保存修改</button>\n      <button @click=\"deleteAccount\" class=\"delete-btn\">注销账户</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"; // 引入 Axios\nexport default {\n  data() {\n    return {\n      bio: this.$route.query.bio || \"\", // 让 bio 成为可编辑的状态\n      username: this.$route.query.username || \"\", // 获取用户名\n      password: this.$route.query.password || \"\", // 用于保存用户输入的密码\n    };\n  },\n  methods: {\n    // 保存修改信息\n    async saveChanges() {\n      try {\n        // 发送 PUT 请求到后端保存修改信息\n        const response = await axios.put(\"http://localhost:5000/api/users/update\", {\n          username: this.username,\n          password: this.password, // 传递密码\n          bio: this.bio, // 传递个人简介\n        });\n        console.log(\"修改后的个人信息已保存:\", response.data);\n        alert(\"个人信息已保存！\");\n      } catch (error) {\n        console.error(\"保存信息时发生错误:\", error);\n        alert(`${error}`);\n      }\n    },\n    // 注销并删除账户\n    async deleteAccount() {\n      try {\n        if (confirm(\"确定要注销账户吗？此操作不可撤销\")) {\n          // 发送 DELETE 请求到后端删除用户\n          const response = await axios.delete(\n            `http://localhost:5000/api/users/delete/${this.username}`\n          );\n          console.log(\"用户账户已删除:\", response.data);\n          alert(\"您的账户已被删除\");\n          // 重定向到登录页面或其他页面\n          this.$router.push(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"注销账户时发生错误:\", error);\n        alert(\"删除账户失败，请稍后再试。\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 容器样式 */\n.user-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n  text-align: center;\n}\n\n/* 信息框容器样式 */\n.info-container {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n/* 用户信息框样式 */\n.user-info-box {\n  background-color: #f8f9fa;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n/* 输入框样式 */\n.input-field {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 15px;\n  border-radius: 5px;\n  border: 1px solid #ced4da;\n  font-size: 1rem;\n}\n\n.input-field2 {\n  width: 100%;\n  height: 100px;\n  padding: 10px;\n  margin-bottom: 15px;\n  align-items: top;\n  border-radius: 5px;\n  border: 1px solid #ced4da;\n  font-size: 1rem;\n  text-align: left; /* 内容左对齐 */\n  box-sizing: border-box; /* 确保 padding 不影响实际宽度和高度 */\n  resize: none; /* 可选，禁用用户调整文本区域大小 */\n}\n\n/* 操作按钮的样式 */\n.action-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n.save-btn,\n.delete-btn {\n  padding: 10px 20px;\n  font-size: 1.1rem;\n  border-radius: 5px;\n  cursor: pointer;\n  border: none;\n  transition: background-color 0.3s ease;\n}\n\n.save-btn {\n  background-color: #28a745;\n  color: white;\n}\n\n.save-btn:hover {\n  background-color: #218838;\n}\n\n.delete-btn {\n  background-color: #dc3545;\n  color: white;\n}\n\n.delete-btn:hover {\n  background-color: #c82333;\n}\n</style>"],"mappings":";;EAEOA,KAAK,EAAC;AAAgB;;EAGpBA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAe;;EA4BvBA,KAAK,EAAC;AAAgB;;uBAhC7BC,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,mBAAA,CAAgC,YAA5B,WAAS,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,QAAQ,kBAExBH,mBAAA,CA2BM,OA3BNI,UA2BM,GA1BJJ,mBAAA,CAyBM,OAzBNK,UAyBM,G,0BAxBJL,mBAAA,CAAiC;IAA1BM,GAAG,EAAC;EAAU,GAAC,KAAG,sB,gBACzBN,mBAAA,CAME;IAdV,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASmBN,KAAA,CAAAC,QAAQ,GAAAK,MAAA;IACjBC,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,UAAU;IACbC,WAAW,EAAC,QAAQ;IACpBd,KAAK,EAAC;iDAJGK,KAAA,CAAAC,QAAQ,E,6BAMnBH,mBAAA,CAAgC;IAAzBM,GAAG,EAAC;EAAU,GAAC,IAAE,sB,gBACxBN,mBAAA,CAME;IAtBV,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiBmBN,KAAA,CAAAU,QAAQ,GAAAJ,MAAA;IACjBC,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,UAAU;IACbC,WAAW,EAAC,OAAO;IACnBd,KAAK,EAAC;iDAJGK,KAAA,CAAAU,QAAQ,E,6BAMnBZ,mBAAA,CAA6B;IAAtBM,GAAG,EAAC;EAAK,GAAC,MAAI,sB,gBACrBN,mBAAA,CAME;IA9BV,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAyBmBN,KAAA,CAAAW,GAAG,GAAAL,MAAA;IACZC,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,KAAK;IACRC,WAAW,EAAC,SAAS;IACrBd,KAAK,EAAC;iDAJGK,KAAA,CAAAW,GAAG,E,OASlBb,mBAAA,CAGM,OAHNc,UAGM,GAFJd,mBAAA,CAA2D;IAAlDe,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEnB,KAAK,EAAC;KAAW,MAAI,GAClDG,mBAAA,CAA+D;IAAtDe,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEC,QAAA,CAAAE,aAAA,IAAAF,QAAA,CAAAE,aAAA,IAAAH,IAAA,CAAa;IAAEnB,KAAK,EAAC;KAAa,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}